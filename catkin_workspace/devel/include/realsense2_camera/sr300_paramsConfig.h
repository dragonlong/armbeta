//#line 2 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the realsense2_camera package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __realsense2_camera__SR300_PARAMSCONFIG_H__
#define __realsense2_camera__SR300_PARAMSCONFIG_H__

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace realsense2_camera
{
  class sr300_paramsConfigStatics;

  class sr300_paramsConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(sr300_paramsConfig &config, const sr300_paramsConfig &max, const sr300_paramsConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const sr300_paramsConfig &config1, const sr300_paramsConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, sr300_paramsConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const sr300_paramsConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, sr300_paramsConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const sr300_paramsConfig &config) const = 0;
      virtual void getValue(const sr300_paramsConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    template <class T>
    class ParamDescription : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T sr300_paramsConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T (sr300_paramsConfig::* field);

      virtual void clamp(sr300_paramsConfig &config, const sr300_paramsConfig &max, const sr300_paramsConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const sr300_paramsConfig &config1, const sr300_paramsConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, sr300_paramsConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const sr300_paramsConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, sr300_paramsConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const sr300_paramsConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const sr300_paramsConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, sr300_paramsConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    template<class T, class PT>
    class GroupDescription : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, sr300_paramsConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<sr300_paramsConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(sr300_paramsConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("sr300_color_backlight_compensation"==(*_i)->name){sr300_color_backlight_compensation = boost::any_cast<int>(val);}
        if("sr300_color_brightness"==(*_i)->name){sr300_color_brightness = boost::any_cast<int>(val);}
        if("sr300_color_contrast"==(*_i)->name){sr300_color_contrast = boost::any_cast<int>(val);}
        if("sr300_color_gain"==(*_i)->name){sr300_color_gain = boost::any_cast<int>(val);}
        if("sr300_color_gamma"==(*_i)->name){sr300_color_gamma = boost::any_cast<int>(val);}
        if("sr300_color_hue"==(*_i)->name){sr300_color_hue = boost::any_cast<int>(val);}
        if("sr300_color_saturation"==(*_i)->name){sr300_color_saturation = boost::any_cast<int>(val);}
        if("sr300_color_sharpness"==(*_i)->name){sr300_color_sharpness = boost::any_cast<int>(val);}
        if("sr300_color_white_balance"==(*_i)->name){sr300_color_white_balance = boost::any_cast<int>(val);}
        if("sr300_color_enable_auto_white_balance"==(*_i)->name){sr300_color_enable_auto_white_balance = boost::any_cast<bool>(val);}
        if("sr300_color_exposure"==(*_i)->name){sr300_color_exposure = boost::any_cast<int>(val);}
        if("sr300_color_enable_auto_exposure"==(*_i)->name){sr300_color_enable_auto_exposure = boost::any_cast<bool>(val);}
        if("sr300_depth_visual_preset"==(*_i)->name){sr300_depth_visual_preset = boost::any_cast<int>(val);}
        if("sr300_depth_laser_power"==(*_i)->name){sr300_depth_laser_power = boost::any_cast<int>(val);}
        if("sr300_depth_accuracy"==(*_i)->name){sr300_depth_accuracy = boost::any_cast<int>(val);}
        if("sr300_depth_motion_range"==(*_i)->name){sr300_depth_motion_range = boost::any_cast<int>(val);}
        if("sr300_depth_filter_option"==(*_i)->name){sr300_depth_filter_option = boost::any_cast<int>(val);}
        if("sr300_depth_confidence_threshold"==(*_i)->name){sr300_depth_confidence_threshold = boost::any_cast<int>(val);}
        if("sr300_depth_frames_queue_size"==(*_i)->name){sr300_depth_frames_queue_size = boost::any_cast<int>(val);}
        if("sr300_depth_units"==(*_i)->name){sr300_depth_units = boost::any_cast<double>(val);}
      }
    }

    int sr300_color_backlight_compensation;
int sr300_color_brightness;
int sr300_color_contrast;
int sr300_color_gain;
int sr300_color_gamma;
int sr300_color_hue;
int sr300_color_saturation;
int sr300_color_sharpness;
int sr300_color_white_balance;
bool sr300_color_enable_auto_white_balance;
int sr300_color_exposure;
bool sr300_color_enable_auto_exposure;
int sr300_depth_visual_preset;
int sr300_depth_laser_power;
int sr300_depth_accuracy;
int sr300_depth_motion_range;
int sr300_depth_filter_option;
int sr300_depth_confidence_threshold;
int sr300_depth_frames_queue_size;
double sr300_depth_units;

    bool state;
    std::string name;

    
}groups;



//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_color_backlight_compensation;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_color_brightness;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_color_contrast;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_color_gain;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_color_gamma;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_color_hue;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_color_saturation;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_color_sharpness;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_color_white_balance;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool sr300_color_enable_auto_white_balance;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_color_exposure;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool sr300_color_enable_auto_exposure;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_depth_visual_preset;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_depth_laser_power;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_depth_accuracy;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_depth_motion_range;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_depth_filter_option;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_depth_confidence_threshold;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sr300_depth_frames_queue_size;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double sr300_depth_units;
//#line 218 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("sr300_paramsConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const sr300_paramsConfig &__max__ = __getMax__();
      const sr300_paramsConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const sr300_paramsConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const sr300_paramsConfig &__getDefault__();
    static const sr300_paramsConfig &__getMax__();
    static const sr300_paramsConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const sr300_paramsConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void sr300_paramsConfig::ParamDescription<std::string>::clamp(sr300_paramsConfig &config, const sr300_paramsConfig &max, const sr300_paramsConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class sr300_paramsConfigStatics
  {
    friend class sr300_paramsConfig;

    sr300_paramsConfigStatics()
    {
sr300_paramsConfig::GroupDescription<sr300_paramsConfig::DEFAULT, sr300_paramsConfig> Default("Default", "", 0, 0, true, &sr300_paramsConfig::groups);
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_color_backlight_compensation = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_color_backlight_compensation = 4;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_color_backlight_compensation = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_backlight_compensation", "int", 1, "Backlight Compensation", "", &sr300_paramsConfig::sr300_color_backlight_compensation)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_backlight_compensation", "int", 1, "Backlight Compensation", "", &sr300_paramsConfig::sr300_color_backlight_compensation)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_color_brightness = -64;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_color_brightness = 64;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_color_brightness = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_brightness", "int", 2, "Brightness", "", &sr300_paramsConfig::sr300_color_brightness)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_brightness", "int", 2, "Brightness", "", &sr300_paramsConfig::sr300_color_brightness)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_color_contrast = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_color_contrast = 100;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_color_contrast = 50;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_contrast", "int", 3, "Contrast", "", &sr300_paramsConfig::sr300_color_contrast)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_contrast", "int", 3, "Contrast", "", &sr300_paramsConfig::sr300_color_contrast)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_color_gain = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_color_gain = 128;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_color_gain = 64;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_gain", "int", 4, "Gain", "", &sr300_paramsConfig::sr300_color_gain)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_gain", "int", 4, "Gain", "", &sr300_paramsConfig::sr300_color_gain)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_color_gamma = 100;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_color_gamma = 500;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_color_gamma = 300;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_gamma", "int", 5, "Gamma", "", &sr300_paramsConfig::sr300_color_gamma)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_gamma", "int", 5, "Gamma", "", &sr300_paramsConfig::sr300_color_gamma)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_color_hue = -180;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_color_hue = 180;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_color_hue = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_hue", "int", 6, "Hue", "", &sr300_paramsConfig::sr300_color_hue)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_hue", "int", 6, "Hue", "", &sr300_paramsConfig::sr300_color_hue)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_color_saturation = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_color_saturation = 100;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_color_saturation = 64;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_saturation", "int", 7, "Saturation", "", &sr300_paramsConfig::sr300_color_saturation)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_saturation", "int", 7, "Saturation", "", &sr300_paramsConfig::sr300_color_saturation)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_color_sharpness = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_color_sharpness = 100;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_color_sharpness = 50;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_sharpness", "int", 8, "Sharpness", "", &sr300_paramsConfig::sr300_color_sharpness)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_sharpness", "int", 8, "Sharpness", "", &sr300_paramsConfig::sr300_color_sharpness)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_color_white_balance = 2800;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_color_white_balance = 6500;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_color_white_balance = 4600;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_white_balance", "int", 9, "White Balance", "", &sr300_paramsConfig::sr300_color_white_balance)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_white_balance", "int", 9, "White Balance", "", &sr300_paramsConfig::sr300_color_white_balance)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_color_enable_auto_white_balance = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_color_enable_auto_white_balance = 1;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_color_enable_auto_white_balance = 1;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<bool>("sr300_color_enable_auto_white_balance", "bool", 10, "Enable Auto White Balance", "", &sr300_paramsConfig::sr300_color_enable_auto_white_balance)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<bool>("sr300_color_enable_auto_white_balance", "bool", 10, "Enable Auto White Balance", "", &sr300_paramsConfig::sr300_color_enable_auto_white_balance)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_color_exposure = 39;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_color_exposure = 10000;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_color_exposure = 156;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_exposure", "int", 11, "Exposure", "", &sr300_paramsConfig::sr300_color_exposure)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_color_exposure", "int", 11, "Exposure", "", &sr300_paramsConfig::sr300_color_exposure)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_color_enable_auto_exposure = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_color_enable_auto_exposure = 1;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_color_enable_auto_exposure = 1;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<bool>("sr300_color_enable_auto_exposure", "bool", 12, "Enable Auto Exposure", "", &sr300_paramsConfig::sr300_color_enable_auto_exposure)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<bool>("sr300_color_enable_auto_exposure", "bool", 12, "Enable Auto Exposure", "", &sr300_paramsConfig::sr300_color_enable_auto_exposure)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_depth_visual_preset = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_depth_visual_preset = 10;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_depth_visual_preset = 8;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_visual_preset", "int", 13, "SR300 Visual Presets", "{'enum': [{'name': 'ShortRange', 'type': 'int', 'value': 0, 'srcline': 29, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Short Range', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'LongRange', 'type': 'int', 'value': 1, 'srcline': 30, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Long Range', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'BackgroundSegmentation', 'type': 'int', 'value': 2, 'srcline': 31, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Background Segmentation', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'GestureRecognition', 'type': 'int', 'value': 3, 'srcline': 32, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Gesture Recognition', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'ObjectScanning', 'type': 'int', 'value': 4, 'srcline': 33, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Object Scanning', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'FaceAnalytics', 'type': 'int', 'value': 5, 'srcline': 34, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Face Analytics', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'FaceLogin', 'type': 'int', 'value': 6, 'srcline': 35, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Face Login', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'GrCursor', 'type': 'int', 'value': 7, 'srcline': 36, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'GR Cursor', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Default', 'type': 'int', 'value': 8, 'srcline': 37, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Default', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'MidRange', 'type': 'int', 'value': 9, 'srcline': 38, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Mid Range', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'IrOnly', 'type': 'int', 'value': 10, 'srcline': 39, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'IR Only', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'SR300 Visual Presets'}", &sr300_paramsConfig::sr300_depth_visual_preset)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_visual_preset", "int", 13, "SR300 Visual Presets", "{'enum': [{'name': 'ShortRange', 'type': 'int', 'value': 0, 'srcline': 29, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Short Range', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'LongRange', 'type': 'int', 'value': 1, 'srcline': 30, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Long Range', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'BackgroundSegmentation', 'type': 'int', 'value': 2, 'srcline': 31, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Background Segmentation', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'GestureRecognition', 'type': 'int', 'value': 3, 'srcline': 32, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Gesture Recognition', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'ObjectScanning', 'type': 'int', 'value': 4, 'srcline': 33, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Object Scanning', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'FaceAnalytics', 'type': 'int', 'value': 5, 'srcline': 34, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Face Analytics', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'FaceLogin', 'type': 'int', 'value': 6, 'srcline': 35, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Face Login', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'GrCursor', 'type': 'int', 'value': 7, 'srcline': 36, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'GR Cursor', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Default', 'type': 'int', 'value': 8, 'srcline': 37, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Default', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'MidRange', 'type': 'int', 'value': 9, 'srcline': 38, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'Mid Range', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'IrOnly', 'type': 'int', 'value': 10, 'srcline': 39, 'srcfile': '/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg', 'description': 'IR Only', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'SR300 Visual Presets'}", &sr300_paramsConfig::sr300_depth_visual_preset)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_depth_laser_power = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_depth_laser_power = 16;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_depth_laser_power = 16;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_laser_power", "int", 14, "Laser Power", "", &sr300_paramsConfig::sr300_depth_laser_power)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_laser_power", "int", 14, "Laser Power", "", &sr300_paramsConfig::sr300_depth_laser_power)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_depth_accuracy = 1;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_depth_accuracy = 3;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_depth_accuracy = 1;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_accuracy", "int", 15, "Accuracy", "", &sr300_paramsConfig::sr300_depth_accuracy)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_accuracy", "int", 15, "Accuracy", "", &sr300_paramsConfig::sr300_depth_accuracy)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_depth_motion_range = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_depth_motion_range = 220;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_depth_motion_range = 9;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_motion_range", "int", 16, "Motion Range", "", &sr300_paramsConfig::sr300_depth_motion_range)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_motion_range", "int", 16, "Motion Range", "", &sr300_paramsConfig::sr300_depth_motion_range)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_depth_filter_option = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_depth_filter_option = 7;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_depth_filter_option = 5;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_filter_option", "int", 17, "Filter Option", "", &sr300_paramsConfig::sr300_depth_filter_option)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_filter_option", "int", 17, "Filter Option", "", &sr300_paramsConfig::sr300_depth_filter_option)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_depth_confidence_threshold = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_depth_confidence_threshold = 15;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_depth_confidence_threshold = 3;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_confidence_threshold", "int", 18, "Confidence Threshold", "", &sr300_paramsConfig::sr300_depth_confidence_threshold)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_confidence_threshold", "int", 18, "Confidence Threshold", "", &sr300_paramsConfig::sr300_depth_confidence_threshold)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_depth_frames_queue_size = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_depth_frames_queue_size = 32;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_depth_frames_queue_size = 16;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_frames_queue_size", "int", 19, "Frames Queue Size", "", &sr300_paramsConfig::sr300_depth_frames_queue_size)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<int>("sr300_depth_frames_queue_size", "int", 19, "Frames Queue Size", "", &sr300_paramsConfig::sr300_depth_frames_queue_size)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sr300_depth_units = 0.000124987;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sr300_depth_units = 0.000124987;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sr300_depth_units = 0.000124987;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<double>("sr300_depth_units", "double", 20, "Depth Units", "", &sr300_paramsConfig::sr300_depth_units)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(sr300_paramsConfig::AbstractParamDescriptionConstPtr(new sr300_paramsConfig::ParamDescription<double>("sr300_depth_units", "double", 20, "Depth Units", "", &sr300_paramsConfig::sr300_depth_units)));
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(sr300_paramsConfig::AbstractGroupDescriptionConstPtr(new sr300_paramsConfig::GroupDescription<sr300_paramsConfig::DEFAULT, sr300_paramsConfig>(Default)));
//#line 356 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<sr300_paramsConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<sr300_paramsConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<sr300_paramsConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    sr300_paramsConfig __max__;
    sr300_paramsConfig __min__;
    sr300_paramsConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const sr300_paramsConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static sr300_paramsConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &sr300_paramsConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const sr300_paramsConfig &sr300_paramsConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const sr300_paramsConfig &sr300_paramsConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const sr300_paramsConfig &sr300_paramsConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<sr300_paramsConfig::AbstractParamDescriptionConstPtr> &sr300_paramsConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<sr300_paramsConfig::AbstractGroupDescriptionConstPtr> &sr300_paramsConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const sr300_paramsConfigStatics *sr300_paramsConfig::__get_statics__()
  {
    const static sr300_paramsConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = sr300_paramsConfigStatics::get_instance();

    return statics;
  }

//#line 29 "/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg"
      const int sr300_params_ShortRange = 0;
//#line 30 "/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg"
      const int sr300_params_LongRange = 1;
//#line 31 "/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg"
      const int sr300_params_BackgroundSegmentation = 2;
//#line 32 "/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg"
      const int sr300_params_GestureRecognition = 3;
//#line 33 "/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg"
      const int sr300_params_ObjectScanning = 4;
//#line 34 "/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg"
      const int sr300_params_FaceAnalytics = 5;
//#line 35 "/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg"
      const int sr300_params_FaceLogin = 6;
//#line 36 "/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg"
      const int sr300_params_GrCursor = 7;
//#line 37 "/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg"
      const int sr300_params_Default = 8;
//#line 38 "/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg"
      const int sr300_params_MidRange = 9;
//#line 39 "/home/dragonx/catkin_workspace/src/realsense-2.0.3/realsense2_camera/cfg/sr300_params.cfg"
      const int sr300_params_IrOnly = 10;
}

#endif // __SR300_PARAMSRECONFIGURATOR_H__
